using System;

namespace BinarySearch
{
    class BinarySearch
    {
        static void Main()
        {
            Console.WriteLine("Enter length of the array:");
            int length;
            do
            {
                Console.Write("Length = ");
            }
            while (!int.TryParse(Console.ReadLine(), out length));

            int[] array = new int[length];

            for (int m = 0; m < length; m++)
            {
                array[m] = int.Parse(Console.ReadLine());
            }
            int value;
            do
            {
                Console.Write("Value = ");
            }
            while(!int.TryParse(Console.ReadLine(), out value));

            int[] sortedArray = SortArray(array);

            int start = 0;
            int end = array.Length - 1;
            int middle = (start + end) / 2;

            while (sortedArray[middle] != value && start < end)
            {
                if (value < sortedArray[middle])
                {
                    end = middle - 1;
                }
                else if (value > sortedArray[middle])
                {
                    start = middle + 1;
                }
            }

            int result = (sortedArray[middle] != value) ? -1 : middle;

            if (result == -1)
            {
                Console.WriteLine("Number not found!");
            }
            else
            {
                Console.WriteLine("Index of {0} is {1}", value, middle);
            }

            for (int i = 0; i < sortedArray.Length; i++)
            {
                Console.Write(sortedArray[i] + ",");
            }
        }

        //Method for sorting the array.
        private static int[] SortArray(int[] array)
        {
            int i, j;
            int min, temp;
            int length = array.Length;

            for (i = 0; i < length - 1; i++)
            {
                min = i;

                for (j = i + 1; j < length; j++)
                {
                    if (array[j] < array[min])
                    {
                        min = j;
                    }
                }

                temp = array[i];
                array[i] = array[min];
                array[min] = temp;
            }
            return array;
        }
    }
}
